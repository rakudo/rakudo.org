% layout 'default';
% title 'Downloads';

<div class="tabs">
    <input type="radio" id="download-tab-source" name="tab-group-download">
    <label class="btn-dark" for="download-tab-source">
      <img src="/asset/pics/os-icon-source.png" alt=""></img>
      Sources
    </label>
    <div class="tab-content">
      <p>The source is the basis from which all the other packages are created. If
      none of the other options suits your need, you can always compile Rakudo
      yourself from these sources.</p>
      <p>
      % my $src_files = $binaries->all('rakudo', 'src');
      % if ($src_files->size > 0) {
        %= include '_files-list', vers => c($src_files->[0]), product => 'rakudo', archive_filter => 0;
      % }
      </p>
      <a class="btn btn-dark" href="<%= url_for 'downloads-rakudo' %>">All releases</a>
      <a class="btn btn-dark"
        href="<%= url_for 'downloads-rakudo-source' %>"
        >Build Instructions</a>
      <a class="btn btn-dark"
        href="<%= url_for 'downloads-verifying' %>"
        >Verifying</a>
    </div>

    <input type="radio" id="download-tab-windows" name="tab-group-download" checked>
    <label class="btn-dark" for="download-tab-windows">
      <img src="/asset/pics/os-icon-windows.png" alt=""></img>
      Windows
    </label>
    <div class="tab-content">
      <h4>Binary Releases</h4>
      Archives and installers contain a precompiled Rakudo and the Zef module manager.
      The filenames follow the pattern
      <code>rakudo-[backend]-[version]-[build revision]-[OS]-[architecture]-[toolchain]</code>.
      The archives have executables located in <code>bin/</code> and
      <code>share/perl6/site/bin/</code>. See the contained <code>README.md</code>
      file for further information.
      <p>
      % my $win_files = $binaries->all('rakudo', 'win');
      % if ($win_files->size > 0) {
        %= include '_files-list', vers => c($win_files->[0]), product => 'rakudo', archive_filter => 0;
      % }
      </p>
      <a class="btn btn-dark kick-b" href="<%= url_for 'downloads-rakudo' %>">All releases</a>
      <a class="btn btn-dark kick-b"
        href="<%= url_for 'downloads-verifying' %>"
        >Verifying</a>
      
      <h5>Scoop</h5>

      <p>Install Rakudo-on-MoarVM with Scoop:
      <code>scoop install rakudo-moar</code></p>
      <a class="btn btn-dark kick-b" href="https://scoop.sh/">Scoop</a>
      
      <h4>Rakudo Star Bundle</h4>

      <p>This is a packaging of Rakudo itself, MoarVM, NQP and the modules of the Rakudo Star Bundle
      It's built straight from the Rakudo Star Bundle Windows MSI usually shortly after a Rakudo release.</p>
      
      <h5>Chocolatey</h5>
      <p>Install the Rakudo Star Bundle with chocolatey:
      <code>choco install rakudostar</code></p>
      <a class="btn btn-dark kick-b" href="https://chocolatey.org/packages/rakudostar">Chocolatey</a>
      
      <h5>Scoop</h5>
      <p>Install the Rakudo Star Bundle with Scoop:
      <code>scoop install rakudo-star</code></p>
      <a class="btn btn-dark" href="https://scoop.sh/">Scoop</a>
      
    </div>

    <input type="radio" id="download-tab-linux" name="tab-group-download">
    <label class="btn-dark" for="download-tab-linux">
      <img src="/asset/pics/os-icon-linux.png" alt=""></img>
      Linux
    </label>
    <div class="tab-content">
      <h4>Binary Releases</h4>
      Archives contain a precompiled Rakudo and the Zef module manager.
      The filenames follow the pattern
      <code>rakudo-[backend]-[version]-[build revision]-[OS]-[architecture]-[toolchain]</code>.
      The archives have executables located in <code>bin/</code> and
      <code>share/perl6/site/bin/</code>. See the contained <code>README.md</code>
      file for further information.
      <br/>
      These don't work on <b>Alpine</b>. See below.
      <p>
      % my $linux_files = $binaries->all('rakudo', 'linux');
      % if ($linux_files->size > 0) {
        %= include '_files-list', vers => c($linux_files->[0]), product => 'rakudo', archive_filter => 0;
      % }
      </p>
      <a class="btn btn-dark kick-b" href="<%= url_for 'downloads-rakudo' %>">All releases</a>
      <a class="btn btn-dark kick-b"
        href="<%= url_for 'downloads-verifying' %>"
        >Verifying</a>

      <h4>Distro packages</h4>

      <p>When on *nix, the easiest way to install Rakudo is to use the packages provided by your distribution. However 
      <i>distro packages can be out of date</i> (the Rakudo that gets installed may be more than a year old), and if that's 
      the case, the best option is usually to build from source or to use a raku specific manager such as rakubrew. 
      You may wish to try a user-maintained repository (see below).
      </p>

      <h5>Fedora</h5>
      <p><code>dnf install rakudo</code></p>

      <h5>Ubuntu / Debian</h5>
      <p><code>apt-get install rakudo</code></p>

      <h5>openSUSE</h5>
      <h6>openSUSE Tumbleweed (rolling release)</h6>
      <p><code>zypper install rakudo</code></p>
      <h6>openSUSE Leap (stable)</h6>
      <a class="kick-b btn btn-dark" href="https://software.opensuse.org/package/rakudo">Click on "1 Click Install" under experimental packages</a>

      <h5>Alpine</h5>
      The compiled tarballs above don't work on Alpine because they are built with <code>glibc</code>, but Alpine
      provides <code>musl</code> instead. When trying to run the executables one receives a highly misleading
      <code>/bin/sh: ./rakudo: not found</code> error.
      Installing the <code>gcompat</code> glib compatibility wrapper allows running those tarballs.
      But it's a lot easier and provides for a smaller installation size to just use the distro
      packages Alpine provides. They are usually up-to-date.
      <p><code>apk add rakudo zef</code></p>
      
      <h5>Gentoo (rolling release)</h5>
      <p><code>emerge --ask --verbose dev-lang/rakudo</code></p>

      <h5>Alpine Linux</h5>
      <p><code>apk add rakudo</code></p>
      
      <h5>NixOS</h5>
      <p>NixOS: <code>nix-env -iA nixos.rakudo</code></p>
      <p>Non-NixOS: <code>nix-env -iA nixpkgs.rakudo</code></p>

      <h4>User repositories</h4>
      
      <h5>Arch Linux (AUR)</h5>
      <a class="kick-b btn btn-dark" href="https://aur.archlinux.org/packages/rakudo-bin/">rakudo-bin</a>
      <a class="kick-b btn btn-dark" href="https://aur.archlinux.org/packages/rakudo/">rakudo</a>
      <a class="kick-b btn btn-dark" href="https://aur.archlinux.org/packages/rakudo-git/">rakudo-git</a>
      

      <h5>Slackware Linux (SBo)</h5>
      <a class="kick-b btn btn-dark" href="https://slackbuilds.org/repository/15.0/perl/rakudo/">rakudo</a>

      <h5>rakudo-pkg distro packages</h5>

      <p>These are often more up to date than the packages provided by the
      distribution itself, but require adding a third party repository.<br/>
      <ul>
        <li>Native packages and repositories for Alpine, Debian, EL (RHEL/CentOS/AmazonLinux/OracleLinux), Fedora, openSUSE and Ubuntu
        <li>Additionally a relocable tar.gz for all Linux distributions
        <li>One single package used for Rakudo, NQP and MoarVM
        <li>Includes zef (Raku Module Installer) and helper scripts (e.g. zef install as user).
      </ul>
      <a class="btn btn-dark" href="https://nxadm.github.io/rakudo-pkg">Rakudo-Pkg package repositories</a>
    </div>

    <input type="radio" id="download-tab-macos" name="tab-group-download">
    <label class="btn-dark" for="download-tab-macos">
      <img src="/asset/pics/os-icon-apple.png" alt=""></img>
      Mac OS
    </label>
    <div class="tab-content">
      <h4>Binary Releases</h4>
      Archives contain a precompiled Rakudo and the Zef module manager.
      The filenames follow the pattern
      <code>rakudo-[backend]-[version]-[build revision]-[OS]-[architecture]-[toolchain]</code>.
      The archives have executables located in <code>bin/</code> and
      <code>share/perl6/site/bin/</code>. See the contained <code>README.md</code>
      file for further information.
      <p>
      % my $mac_files = $binaries->all('rakudo', 'macos');
      % if ($mac_files->size > 0) {
        %= include '_files-list', vers => c($mac_files->[0]), product => 'rakudo', archive_filter => 0;
      % }
      </p>
      <a class="btn btn-dark kick-b" href="<%= url_for 'downloads-rakudo' %>">All releases</a>
      <a class="btn btn-dark kick-b"
        href="<%= url_for 'downloads-verifying' %>"
        >Verifying</a>

      <h4>Homebrew</h4>
      <p>There is a  Homebrew package available:<br/>
      <code>brew install rakudo</code></p>

      <h4>MacPorts</h4>
      <p>There is a rakudo MacPort available:<br/>
      <code>sudo port install rakudo</code></p>
    </div>

    <input type="radio" id="download-tab-other-platforms" name="tab-group-download">
    <label class="btn-dark" for="download-tab-other-platforms">
      <img src="/asset/pics/os-icon-other-platforms.png" alt=""></img>
      Other Platforms
    </label>
    <div class="tab-content">
      <h4>BSD</h4>
      <p>pkgsrc provides rakudo packages for NetBSD and other Unix flavors.<br/>
      </p>
      <a class="btn btn-dark" href="http://pkgsrc.se/lang/rakudo">pkgsrc.se</a>
    </div>
</div>

<h3 class="h4">Other installation methods</h3>

<h5>Rakubrew</h5>

<p>A download, installation and version management tool for Rakudo. Works on all major platforms.</p>
<a class="kick-b btn btn-dark" href="https://rakubrew.org/">Rakubrew</a>

<h5>Rakudo Star Bundle</h5>

<p>This option contains the Rakudo Compiler,
a <a href="https://github.com/rakudo/star/blob/master/etc/modules.txt">collection
of modules</a> from the <%== p6 %>
<a href="http://modules.raku.org/">ecosystem</a>,
and <a href="https://docs.raku.org/">language documentation</a>.
The Rakudo Star Bundle is released shortly after a Rakudo release.</p>
<a class="btn btn-dark" href="<%= url_for 'star' %>">Rakudo Star Bundle</a>

